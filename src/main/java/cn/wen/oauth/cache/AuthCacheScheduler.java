package cn.wen.oauth.cache;import java.util.concurrent.ScheduledExecutorService;import java.util.concurrent.ScheduledThreadPoolExecutor;import java.util.concurrent.TimeUnit;import java.util.concurrent.atomic.AtomicInteger;/** * @ClassName: AuthCacheScheduler * @Author: 小飞 * @Date: 2023/5/10 9:36 * @Description: 缓存调度器 */public enum  AuthCacheScheduler {    /**     * 当前实例     */    INSTANCE;    // 缓存任务    private AtomicInteger cacheTaskNumber = new AtomicInteger(1);    private ScheduledExecutorService scheduler;    AuthCacheScheduler() {        create();    }    private void create() {        this.shutdown();        this.scheduler = new ScheduledThreadPoolExecutor(10, r -> new Thread(r, String.format("YaLingAuth-Task-%s", cacheTaskNumber.getAndIncrement())));    }    public void shutdown() {        if (null != scheduler) {            this.scheduler.shutdown();        }    }    public void schedule(Runnable task, long delay) {        this.scheduler.scheduleAtFixedRate(task, delay, delay, TimeUnit.MILLISECONDS);    }}